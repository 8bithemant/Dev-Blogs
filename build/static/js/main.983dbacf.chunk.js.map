{"version":3,"sources":["screens/homeScreen.js","action/homeAction.js","constants/banner.js","screens/articleScreen.js","App.js","serviceWorker.js","store.js","reducers/homeScreenReducer.js","index.js","svg/heart.svg","svg/pharmacy.svg","svg/writing.svg"],"names":["useStyles","makeStyles","theme","root","display","marginLeft","flexGrow","marginBottom","paper","padding","spacing","margin","minWidth","backgroundColor","boxShadow","position","image","width","height","img","maxWidth","maxHeight","title","fontSize","fontFamily","color","svg","paddingLeft","svgcomment","HomeScreen","props","articleList","useSelector","state","articles","loading","error","dispatch","useDispatch","classes","useEffect","a","type","axios","get","data","payload","message","className","CircularProgress","href","map","article","to","id","style","textDecoration","key","Paper","Grid","container","item","xs","sm","direction","src","Heart","alt","public_reactions_count","Comment","comments_count","Date","readable_publish_date","Typography","gutterBottom","variant","description","HideOnScroll","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","in","ArticleScreen","articleDetails","articleId","match","params","CssBaseline","AppBar","Toolbar","cover_image","class","markdown","body_markdown","options","tables","emoji","App","path","exact","component","Boolean","location","hostname","reducer","combineReducers","action","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.983dbacf.chunk.js","sourcesContent":["import React,{useEffect} from 'react'\nimport {listArticles} from '../action/homeAction';\nimport {useSelector , useDispatch} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Heart from \"../svg/heart.svg\"\nimport Comment from '../svg/pharmacy.svg'\nimport Date from '../svg/writing.svg'\n\n\nconst useStyles = makeStyles(theme => ({\n        root: {\n          display: 'flex',\n          '& > * + *': {\n            marginLeft: '50px',\n          },\n          flexGrow: 1,\n          marginBottom:\"7%\"\n        },\n\n        paper: {\n          padding: theme.spacing(2),\n          margin: \"auto\",\n          minWidth: \"100%\",\n          backgroundColor:\"#ffffff\",\n          boxShadow: \"0.5px #e4e4e4 solid\",\n          position: \"relative\"\n          \n        },\n        image: {\n          width: 128,\n          height: 128\n        },\n        img: {\n          margin: \"auto\",\n          display: \"block\",\n          maxWidth: \"100%\",\n          maxHeight: \"100%\"\n        },\n        title :{\n          fontSize:\"25px\",\n          fontFamily: \"Big Caslon,Book Antiqua,Palatino Linotype,Georgia,serif\",\n          color: \"#222222\"\n        },\n        svg:{\n          height:\"30px\",\n          width:\"24px\",\n          paddingLeft:\"9px\"\n        },\n        svgcomment:{\n          paddingLeft:\"10px\",\n          height:\"45px\",\n          width:\"26px\"\n        },\n      }));\n  \n\n\n\n\nexport default function HomeScreen(props) {\n   \n    \n   \n    const articleList = useSelector(state => state.articleList);\n    const {articles, loading, error}= articleList;\n\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n\n    useEffect (()=>{\n        dispatch(listArticles())\n\n            return()=>{\n\n           }\n    }, [])\n\n\n    return loading? <div className=\"loading\" ><CircularProgress color=\"secondary\" /></div>:\n    error? <div>{error}</div>:\n\n    <div className=\"main-box\">  \n    <div className=\"home-banner\"> \n        <div className=\"home-header\">\n            Hemant Joshi's Articles\n        </div>\n        <div className=\"home-description\">\n        <i> Hii, I am <a href=\"https://hemant.codes/\">Hemant Joshi</a> </i>.<br /> I am 18 Year old Junior Mern Stack Developer, i share a lot of daily stuff on Twitter, make sure to follow me  <br /><a href=\"https://twitter.com/8bithemant/\"><i>@8bithemant </i></a> \n        </div>\n        </div>\n     \n     \n      <div className=\"article-box\"> \n       {\n\n\n            \n            \n            articles.map(article =>\n               \n              <Link className={classes.title} to ={'/articles/' + article.id + '/'} style={{textDecoration: 'none', color: 'white'}}> <div key={article.id}>\n                     \n\n                      <div className={classes.root}>\n                        <Paper className={classes.paper}>\n                          <Grid container spacing={2}>\n\n                            <Grid item xs={12} sm container>\n                              <Grid item xs container direction=\"column\" spacing={2}>\n                                <Grid item xs >\n                                  <div className=\"article-title\">\n                                  {article.title}\n                                 </div>\n                                  <div className=\"article-info\">\n                                  <img src={Heart} alt=\"React Logo\" className=\"article-svg\" />  <div className=\"article-info-1\">  {article.public_reactions_count} </div>  <img src={Comment} alt=\"React Logo\" className=\"article-svg\" /> <div className=\"article-info-1\"> {article.comments_count}  </div> <img src={Date} alt=\"React Logo\" className=\"article-svg\" /> <div className=\"article-info-1\">{article.readable_publish_date}   </div>\n                                  </div>\n                                  <Typography gutterBottom variant=\"subtitle1\">\n                                  {article.description}\n                                  </Typography>\n                                </Grid>\n                                <Grid item>\n                                  \n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Paper>\n                      </div>\n\n                    {/* <div className=\"main-box\">\n                    <div className=\"article-title\">\n                        <Link className=\"title\" to ={'/articles/' + article.id + '/'}>{article.title}</Link>\n                                </div>\n                        <div className=\"article-date\">{article.readable_publish_date}</div>\n                        <div className=\"article-comments\">{article.comments_count}</div>\n                        <div className=\"article-reactions\">{article.positive_reactions_count}</div>\n                        \n\n                        \n                        <div className=\"article-tags\">Tags: #{article.tag_list[0]},  #{article.tag_list[1]}, #{article.tag_list[2]}</div>\n                    </div> */}\n            </div>\n            </Link>\n\n                )\n        }\n        </div>\n        </div>\n}","\n\nimport axios from 'axios';\nimport { ARTICLE_LIST_REQUEST, ARTICLE_LIST_SUCCESS, ARTICLE_LIST_FAIL, ARTICLE_DETAILS_REQUEST, ARTICLE_DETAILS_SUCCESS, ARTICLE_DETAILS_FAIL  } from '../constants/banner';\n\nconst listArticles =()=> async(dispatch)=>{\n\n\n    try{\n        dispatch({type: ARTICLE_LIST_REQUEST});\n        const {data}= await axios.get('https://dev.to/api/articles?username=hemant')\n        dispatch({type:ARTICLE_LIST_SUCCESS, payload: data})\n    }\n    catch(error){\n        dispatch({type:ARTICLE_LIST_FAIL, payload:error.message})\n\n    }\n}\n\n\n\nconst detailsArticle = (articleId)=> async(dispatch)=>{\n\n    try{\n\n        dispatch({type:ARTICLE_DETAILS_REQUEST, payload:articleId})\n        const {data}=await axios.get(\"https://dev.to/api/articles/\"+ articleId)\n        dispatch({type:ARTICLE_DETAILS_SUCCESS, payload:data})\n    }catch(error){\n        dispatch({type:ARTICLE_DETAILS_FAIL, payload:error.message})\n\n    }\n}\n\nexport {listArticles, detailsArticle}","export const ARTICLE_LIST_REQUEST = 'ARTICLE_LIST_REQUEST'\nexport const ARTICLE_LIST_SUCCESS ='ARTICLE_LIST_SUCCESS'\nexport const ARTICLE_LIST_FAIL = 'ARTICLE_LIST_FAIL'\n\nexport const ARTICLE_DETAILS_REQUEST = 'ARTICLE_DETAILS_REQUEST'\nexport const ARTICLE_DETAILS_SUCCESS = 'ARTICLE_DETAILS_SUCCESS'\nexport const ARTICLE_DETAILS_FAIL = 'ARTICLE_DETAILS_FAIL'","import React, { useEffect} from 'react'\nimport {detailsArticle} from '../action/homeAction'\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport 'github-markdown-css';\nimport MarkdownView from 'react-showdown';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Slide from '@material-ui/core/Slide';\n// import Header from '../component/navbar'\n\n\n\n\nfunction HideOnScroll(props) {\n    const { children, window } = props;\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  \n    return (\n      <Slide appear={false} direction=\"down\" in={!trigger}>\n        {children}\n      </Slide>\n    );\n  }\n  \n  HideOnScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n  };\n\nfunction ArticleScreen(props){\n\n    const articleDetails = useSelector(state=>state.articleDetails)\n    const {articles, loading, error} = articleDetails\n\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        dispatch(detailsArticle(props.match.params.id))\n\n        return()=>{\n\n        }\n    },[])\n\n\n    return <div>\n\n        \n\n        <CssBaseline />\n      <HideOnScroll {...props}>\n        <AppBar>\n          <Toolbar>\n              <div className=\"articles-header-a\">     \n                    Hemant </div>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n        \n            {loading? <div>Loading..</div>:\n            error? <div>{error}</div>:\n            (\n\n                \n                <div className='container-sm'>\n                    <div className=\"container-md\">\n                    <img src={articles.cover_image}class=\"img-fluid\" alt=\"Responsive image\"/>\n                    </div>\n                   \n                <div className=\"main\">\n                   <ul>\n                    <li className=\"title-article\" >\n                        <h2>\n                            {articles.title}\n                        </h2>\n                    </li>\n\n\n\n                   </ul>\n                   \n                    </div>\n\n                    <div className=\"body\">\n                    <div class=\"markdown-body\">\n\n                    <MarkdownView\n                        markdown={articles.body_markdown}\n                        options={{ tables: true, emoji: true }}\n                     />\n                    </div>\n                    </div>\n\n\n                    \n\n\n                    </div>\n            )}\n\n\n\n    </div>\n}\n\nexport default ArticleScreen;","import React from 'react';\nimport './App.css';\nimport { Link, BrowserRouter, Route } from 'react-router-dom'\n\nimport HomeScreen from './screens/homeScreen'\nimport ArticleScreen from './screens/articleScreen';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    \n    <div className=\"grid-container\">\n\n    \n\n\n    <main className=\"main\">\n      <div className=\"content\">\n        <Route path ='/' exact={true} component={HomeScreen}/>\n        <Route path='/articles/:id/' component={ArticleScreen} />\n      </div>\n    </main>\n\n\n\n\n\n    </div>\n    \n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {articleListReducer, articleDetailsReducer} from './reducers/homeScreenReducer'\n\nconst reducer= combineReducers({\n\n    articleList: articleListReducer,\n    articleDetails: articleDetailsReducer\n})\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducer,  composeEnhancer(applyMiddleware(thunk)) );\n\nexport default store;","import { ARTICLE_LIST_SUCCESS, ARTICLE_LIST_REQUEST, ARTICLE_LIST_FAIL,ARTICLE_DETAILS_REQUEST,ARTICLE_DETAILS_SUCCESS, ARTICLE_DETAILS_FAIL } from '../constants/banner'\n\n\n\nfunction articleListReducer(state={articles:[]}, action){\n\n\n    switch(action.type){\n      case ARTICLE_LIST_REQUEST:\n          return {loading: true}\n      case ARTICLE_LIST_SUCCESS:\n          return {loading: false, articles: action.payload}\n      case ARTICLE_LIST_FAIL:\n          return {loading: false, error:action.payload}\n      default:\n          return state\n    }\n}\n\n\n\nfunction articleDetailsReducer(state={articles:[]}, action){\n\n\n    switch(action.type){\n      case ARTICLE_DETAILS_REQUEST:\n          return {loading: true}\n      case ARTICLE_DETAILS_SUCCESS:\n          return {loading: false, articles: action.payload}\n      case ARTICLE_DETAILS_FAIL:\n          return {loading: false, error:action.payload}\n      default:\n          return state\n    }\n}\n\n\n\n\n\nexport {articleListReducer, articleDetailsReducer}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/heart.3c19ab0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/pharmacy.44745d96.svg\";","module.exports = __webpack_public_path__ + \"static/media/writing.1abcdebd.svg\";"],"sourceRoot":""}