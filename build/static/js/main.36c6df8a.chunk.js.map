{"version":3,"sources":["screens/homeScreen.js","action/homeAction.js","constants/banner.js","screens/articleScreen.js","App.js","serviceWorker.js","store.js","reducers/homeScreenReducer.js","index.js","svg/heart.svg","svg/pharmacy.svg","svg/writing.svg"],"names":["useStyles","makeStyles","theme","root","display","marginLeft","flexGrow","marginBottom","paper","padding","spacing","margin","minWidth","backgroundColor","boxShadow","position","image","width","height","img","maxWidth","maxHeight","title","fontSize","fontFamily","color","svg","paddingLeft","svgcomment","HomeScreen","props","articleList","useSelector","state","articles","loading","error","dispatch","useDispatch","classes","useEffect","a","type","axios","get","data","payload","message","className","CircularProgress","Helmet","name","content","property","repo","colorOctocat","isPride","href","map","article","to","slug","style","textDecoration","key","id","Paper","Grid","container","item","xs","sm","direction","src","Heart","alt","public_reactions_count","Comment","comments_count","Date","readable_publish_date","description","HideOnScroll","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","in","ArticleScreen","articleDetails","articleSlug","match","params","CssBaseline","AppBar","Toolbar","cover_image","class","markdown","body_markdown","options","tables","emoji","url","shareText","App","path","exact","component","Boolean","location","hostname","reducer","combineReducers","action","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"+VAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACT,YAAa,CACXC,WAAY,QAEdC,SAAU,EACVC,aAAc,MAGhBC,MAAO,CACLC,QAASP,EAAMQ,QAAQ,GACvBC,OAAQ,OACRC,SAAU,OACVC,gBAAiB,UACjBC,UAAW,sBACXC,SAAU,YAEZC,MAAO,CACLC,MAAO,IACPC,OAAQ,KAEVC,IAAK,CACHR,OAAQ,OACRP,QAAS,QACTgB,SAAU,OACVC,UAAW,QAEbC,MAAO,CACLC,SAAU,OACVC,WAAY,0DACZC,MAAO,WAETC,IAAK,CACHR,OAAQ,OACRD,MAAO,OACPU,YAAa,OAEfC,WAAY,CACVD,YAAa,OACbT,OAAQ,OACRD,MAAO,YAII,SAASY,EAAWC,GACjC,IAAMC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMF,eACzCG,EAA6BH,EAA7BG,SAAUC,EAAmBJ,EAAnBI,QAASC,EAAUL,EAAVK,MAErBC,EAAWC,cACXC,EAAUvC,IAQhB,OANAwC,qBAAU,WAGR,OAFAH,EChEgB,uCAAK,WAAMA,GAAN,iBAAAI,EAAA,sEAIjBJ,EAAS,CAACK,KCTkB,yBDKX,SAKGC,IAAMC,IAAI,+CALb,gBAKVC,EALU,EAKVA,KACPR,EAAS,CAACK,KCViB,uBDUUI,QAASD,IAN7B,gDASjBR,EAAS,CAACK,KCZe,oBDYSI,QAAQ,KAAMC,UAT/B,yDAAL,uDDkET,eACN,IAEIZ,EACL,yBAAKa,UAAU,WACb,kBAACC,EAAA,EAAD,CAAkBxB,MAAM,eAExBW,EACF,6BAAMA,GAEN,yBAAKY,UAAU,YACb,kBAACE,EAAA,EAAD,KACF,gDACI,0BAAMC,KAAK,cAAcC,QAAQ,yBACjC,0BAAMC,SAAS,WAAWD,QAAQ,mBACpC,0BAAMC,SAAS,SAASD,QAAQ,6BAChC,0BAAMC,SAAS,iBAAiBD,QAAQ,yBACxC,0BAAMC,SAAS,WAAWD,QAAQ,yBAClC,0BAAMC,SAAS,UAAUD,QAAQ,eAG/B,kBAAC,IAAD,CAAgBE,KAAK,0CAA0CC,aAAa,QAAQC,SAAO,IAC7F,yBAAKR,UAAU,eACb,yBAAKA,UAAU,eAAf,2BACA,yBAAKA,UAAU,oBACb,2BACG,IADH,aAEY,uBAAGS,KAAK,yBAAR,gBAAiD,KAH/D,IAKG,6BALH,qGAM2C,6BACzC,uBAAGA,KAAK,mCACN,8CAKN,yBAAKT,UAAU,gBACZd,EAASwB,KAAI,SAACC,GAAD,OACZ,kBAAC,IAAD,CACEX,UAAWT,EAAQjB,MACnBsC,GAAI,oBAAsBD,EAAQE,KAClCC,MAAO,CAAEC,eAAgB,OAAQtC,MAAO,UAExC,yBAAKuC,IAAKL,EAAQM,IAChB,yBAAKjB,UAAWT,EAAQpC,MACtB,kBAAC+D,EAAA,EAAD,CAAOlB,UAAWT,EAAQ/B,OACxB,kBAAC2D,EAAA,EAAD,CAAMC,WAAS,EAAC1D,QAAS,GACvB,kBAACyD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,IAAE,EAACH,WAAS,GAC7B,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAACF,WAAS,EAACI,UAAU,SAAS9D,QAAS,GAClD,kBAACyD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,yBAAKtB,UAAU,kBAAkBW,EAAQrC,OACzC,yBAAK0B,UAAU,iBACb,yBACEyB,IAAKC,IACLC,IAAI,aACJ3B,UAAU,iBAEZ,yBAAKA,UAAU,mBACZW,EAAQiB,wBAEX,yBACEH,IAAKI,IACLF,IAAI,aACJ3B,UAAU,iBAEZ,yBAAKA,UAAU,mBAEZW,EAAQmB,gBAEX,yBACEL,IAAKM,IACLJ,IAAI,aACJ3B,UAAU,iBACT,IACH,yBAAKA,UAAU,mBACZW,EAAQqB,sBAAuB,MAGpC,yBAAKhC,UAAU,wBACZW,EAAQsB,cAGb,kBAACd,EAAA,EAAD,CAAME,MAAI,gB,wEGpIlC,SAASa,EAAapD,GAAQ,IAClBqD,EAAqBrD,EAArBqD,SAAUC,EAAWtD,EAAXsD,OAIZC,EAAUC,YAAiB,CAAEC,OAAQH,EAASA,SAAWI,IAE/D,OACE,kBAACC,EAAA,EAAD,CAAOC,QAAQ,EAAOlB,UAAU,OAAOmB,IAAKN,GACzCF,GAyGMS,MA3Ff,SAAuB9D,GAEnB,IAAM+D,EAAiB7D,aAAY,SAAAC,GAAK,OAAEA,EAAM4D,kBACzC3D,EAA4B2D,EAA5B3D,SAAUC,EAAkB0D,EAAlB1D,QAASC,EAASyD,EAATzD,MAEpBC,EAAWC,cAWjB,OATAE,qBAAU,WF/BS,IAACsD,EEkChB,OAFAzD,GFhCgByD,EEgCQhE,EAAMiE,MAAMC,OAAOnC,KFhC5B,uCAAgB,WAAMxB,GAAN,iBAAAI,EAAA,sEAI/BJ,EAAS,CAACK,KCrBqB,0BDqBSI,QAAQgD,IAJjB,SAKZnD,IAAMC,IAAI,sCAAuCkD,GALrC,gBAKxBjD,EALwB,EAKxBA,KACPR,EAAS,CAACK,KCtBqB,0BDsBSI,QAAQD,IANjB,gDAQ/BR,EAAS,CAACK,KCvBkB,uBDuBSI,QAAQ,KAAMC,UARpB,yDAAhB,wDEkCT,eAGR,IAGM,6BAIJ,kBAACkD,EAAA,EAAD,MACF,kBAACf,EAAiBpD,EAChB,kBAACoE,EAAA,EAAD,KACI,yBAAKlD,UAAU,UACjB,kBAACmD,EAAA,EAAD,CAASrC,MAAO,CAACjD,gBAAgB,UAC/B,kBAAC,IAAD,CAAM+C,GAAG,IAAIE,MAAO,CAAEC,eAAgB,OAAQtC,MAAO,UACnD,yBAAKuB,UAAU,qBAAf,gBAMR,kBAACmD,EAAA,EAAD,MAEOhE,EAAS,yBAAKa,UAAU,WAC/B,kBAACC,EAAA,EAAD,CAAkBxB,MAAM,eAElBW,EAAO,6BAAMA,GAGjB,yBAAKY,UAAU,gBACH,yBAAKA,UAAU,gBACf,yBAAKyB,IAAKvC,EAASkE,YAAaC,MAAM,YAAY1B,IAAI,sBAG1D,yBAAK3B,UAAU,QACb,yBAAKA,UAAU,iBAAiBd,EAASZ,QAKvC,yBAAK0B,UAAU,QACf,yBAAKqD,MAAM,iBAEX,kBAAC,IAAD,CACIC,SAAUpE,EAASqE,cACnBC,QAAS,CAAEC,QAAQ,EAAMC,OAAO,OAS1C,kBAACxD,EAAA,EAAD,KAEN,+BAAQhB,EAASZ,OACjB,0BAAM6B,KAAK,cAAcC,QAASlB,EAAS+C,cAC3C,0BAAM5B,SAAS,WAAWD,QAASlB,EAASZ,QAC9C,0BAAM+B,SAAS,SAASD,QAAQ,6BAChC,0BAAMC,SAAS,iBAAiBD,QAASlB,EAAS+C,cAClD,0BAAM5B,SAAS,WAAWD,QAASlB,EAASkE,cAC5C,0BAAM/C,SAAS,UAAUD,QAAQ,eAI/B,yBAAKJ,UAAU,SAAf,aACY,kBAAC,UAAD,CAAS2D,IAAK,4CAA8CzE,EAAS2B,KAAQ+C,UAAW,yDAA0D1E,EAASZ,MAAQ,2CAD/K,SCrFOuF,MA1Bf,WACE,OACE,kBAAC,IAAD,KAEA,yBAAK7D,UAAU,kBAKf,0BAAMA,UAAU,QACd,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAO8D,KAAM,IAAIC,OAAO,EAAMC,UAAWnF,IACzC,kBAAC,IAAD,CAAOiF,KAAK,yBAAyBE,UAAWpB,SCXpCqB,QACW,cAA7B7B,OAAO8B,SAASC,UAEe,UAA7B/B,OAAO8B,SAASC,UAEhB/B,OAAO8B,SAASC,SAASpB,MACvB,2D,oBCdN,IAAMqB,EAASC,YAAgB,CAE3BtF,YCFJ,WAAyD,IAA7BE,EAA4B,uDAAtB,CAACC,SAAS,IAAKoF,EAAO,uCAGpD,OAAOA,EAAO5E,MACZ,ILR8B,uBKS1B,MAAO,CAACP,SAAS,GACrB,ILT6B,uBKUzB,MAAO,CAACA,SAAS,EAAOD,SAAUoF,EAAOxE,SAC7C,ILV2B,oBKWvB,MAAO,CAACX,SAAS,EAAOC,MAAMkF,EAAOxE,SACzC,QACI,OAAOb,IDRb4D,eCcJ,WAA4D,IAA7B5D,EAA4B,uDAAtB,CAACC,SAAS,IAAKoF,EAAO,uCAGvD,OAAOA,EAAO5E,MACZ,ILrBiC,0BKsB7B,MAAO,CAACP,SAAS,GACrB,ILtBiC,0BKuB7B,MAAO,CAACA,SAAS,EAAOD,SAAUoF,EAAOxE,SAC7C,ILvB8B,uBKwB1B,MAAO,CAACX,SAAS,EAAOC,MAAMkF,EAAOxE,SACzC,QACI,OAAOb,MDtBXsF,EAAkBnC,OAAOoC,sCAAwCC,IAGxDC,EAFDC,YAAYP,EAAUG,EAAgBK,YAAgBC,OEHpEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,SHuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAApG,GACLqG,QAAQrG,MAAMA,EAAMW,a,mBIzI5B2F,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.36c6df8a.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { listArticles } from \"../action/homeAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Heart from \"../svg/heart.svg\";\nimport Comment from \"../svg/pharmacy.svg\";\nimport Date from \"../svg/writing.svg\";\nimport {Helmet} from \"react-helmet\";\nimport ForkMeOnGithub from 'fork-me-on-github';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: \"50px\",\n    },\n    flexGrow: 1,\n    marginBottom: \"7%\",\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    minWidth: \"100%\",\n    backgroundColor: \"#ffffff\",\n    boxShadow: \"0.5px #e4e4e4 solid\",\n    position: \"relative\",\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  title: {\n    fontSize: \"25px\",\n    fontFamily: \"Big Caslon,Book Antiqua,Palatino Linotype,Georgia,serif\",\n    color: \"#222222\",\n  },\n  svg: {\n    height: \"30px\",\n    width: \"24px\",\n    paddingLeft: \"9px\",\n  },\n  svgcomment: {\n    paddingLeft: \"10px\",\n    height: \"45px\",\n    width: \"26px\",\n  },\n}));\n\nexport default function HomeScreen(props) {\n  const articleList = useSelector((state) => state.articleList);\n  const { articles, loading, error } = articleList;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(listArticles());\n\n    return () => {};\n  }, []);\n\n  return loading ? (\n    <div className=\"loading\">\n      <CircularProgress color=\"secondary\" />\n    </div>\n  ) : error ? (\n    <div>{error}</div>\n  ) : (\n    <div className=\"main-box\">\n      <Helmet>\n    <title>Hemant's Blog</title>\n        <meta name=\"description\" content=\"articles.description\"/> \n        <meta property=\"og:title\" content=\"articles.title\"/>\n\t    \t<meta property=\"og:url\" content=\"hemant-blogs.netlify.app\"/>\n\t\t    <meta property=\"og:description\" content=\"articles.description\"/>\n\t\t    <meta property=\"og:image\" content=\"articles.cover_image\"/> \n\t\t    <meta property=\"og:type\" content=\"Tech-Blog\"/>\n        \n        </Helmet>\n        <ForkMeOnGithub repo=\"https://github.com/8bithemant/Dev-Blogs\" colorOctocat=\"white\" isPride/>\n      <div className=\"home-banner\">\n        <div className=\"home-header\">Hemant Joshi's Articles</div>\n        <div className=\"home-description\">\n          <i>\n            {\" \"}\n            Hii, I am <a href=\"https://hemant.codes/\">Hemant Joshi</a>{\" \"}\n          </i>\n          .<br /> I am 18 Year old Mern Stack Dev, I share a lot of daily\n          content on Twitter, be sure to follow me <br />\n          <a href=\"https://twitter.com/8bithemant/\">\n            <i>@8bithemant </i>\n          </a>\n        </div>\n      </div>\n\n      <div className=\"articles-box\">\n        {articles.map((article) => (\n          <Link\n            className={classes.title}\n            to={\"/articles/hemant/\" + article.slug}\n            style={{ textDecoration: \"none\", color: \"white\" }}\n          >\n            <div key={article.id}>\n              <div className={classes.root}>\n                <Paper className={classes.paper}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm container>\n                      <Grid item xs container direction=\"column\" spacing={2}>\n                        <Grid item xs>\n                          <div className=\"articles-title\">{article.title}</div>\n                          <div className=\"articles-info\">\n                            <img\n                              src={Heart}\n                              alt=\"React Logo\"\n                              className=\"articles-svg\"\n                            />\n                            <div className=\"articles-info-1\">\n                              {article.public_reactions_count}\n                            </div>\n                            <img\n                              src={Comment}\n                              alt=\"React Logo\"\n                              className=\"articles-svg\"\n                            />\n                            <div className=\"articles-info-1\">\n                              \n                              {article.comments_count}\n                            </div>\n                            <img\n                              src={Date}\n                              alt=\"React Logo\"\n                              className=\"articles-svg\"\n                            />{\" \"}\n                            <div className=\"articles-info-1\">\n                              {article.readable_publish_date}{\" \"}\n                            </div>\n                          </div>\n                          <div className=\"articles-description\">\n                            {article.description}\n                          </div>\n                        </Grid>\n                        <Grid item></Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n","\n\nimport axios from 'axios';\nimport { ARTICLE_LIST_REQUEST, ARTICLE_LIST_SUCCESS, ARTICLE_LIST_FAIL, ARTICLE_DETAILS_REQUEST, ARTICLE_DETAILS_SUCCESS, ARTICLE_DETAILS_FAIL  } from '../constants/banner';\n\nconst listArticles =()=> async(dispatch)=>{\n\n\n    try{\n        dispatch({type: ARTICLE_LIST_REQUEST});\n        const {data}= await axios.get('https://dev.to/api/articles?username=hemant')\n        dispatch({type:ARTICLE_LIST_SUCCESS, payload: data})\n    }\n    catch(error){\n        dispatch({type:ARTICLE_LIST_FAIL, payload:error.message})\n\n    }\n}\n\n\n\nconst detailsArticle = (articleSlug)=> async(dispatch)=>{\n\n    try{\n\n        dispatch({type:ARTICLE_DETAILS_REQUEST, payload:articleSlug})\n        const {data}=await axios.get(\"https://dev.to/api/articles/hemant/\"+ articleSlug)\n        dispatch({type:ARTICLE_DETAILS_SUCCESS, payload:data})\n    }catch(error){\n        dispatch({type:ARTICLE_DETAILS_FAIL, payload:error.message})\n\n    }\n}\n\nexport {listArticles, detailsArticle}","export const ARTICLE_LIST_REQUEST = 'ARTICLE_LIST_REQUEST'\nexport const ARTICLE_LIST_SUCCESS ='ARTICLE_LIST_SUCCESS'\nexport const ARTICLE_LIST_FAIL = 'ARTICLE_LIST_FAIL'\n\nexport const ARTICLE_DETAILS_REQUEST = 'ARTICLE_DETAILS_REQUEST'\nexport const ARTICLE_DETAILS_SUCCESS = 'ARTICLE_DETAILS_SUCCESS'\nexport const ARTICLE_DETAILS_FAIL = 'ARTICLE_DETAILS_FAIL'","import React, { useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Helmet} from \"react-helmet\";\nimport {detailsArticle} from '../action/homeAction'\nimport { useSelector, useDispatch } from 'react-redux';\nimport 'github-markdown-css';\nimport MarkdownView from 'react-showdown';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Box from '@material-ui/core/Box';\nimport Slide from '@material-ui/core/Slide';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Twitter } from 'react-sharingbuttons'\nimport ForkMeOnGithub from 'fork-me-on-github';\n// import Header from '../component/navbar'\n\n\n\n\nfunction HideOnScroll(props) {\n    const { children, window } = props;\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\n  \n    return (\n      <Slide appear={false} direction=\"down\" in={!trigger}>\n        {children}\n      </Slide>\n    );\n  }\n  \n  HideOnScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n  };\n\nfunction ArticleScreen(props){\n\n    const articleDetails = useSelector(state=>state.articleDetails)\n    const {articles, loading, error} = articleDetails\n\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        dispatch(detailsArticle(props.match.params.slug))\n\n        return()=>{\n\n        }\n    },[])\n\n\n    return (<div>\n\n        \n\n        <CssBaseline />\n      <HideOnScroll {...props}>\n        <AppBar>\n            <div className=\"header\">  \n          <Toolbar style={{backgroundColor:\"black\"}}>\n            <Link to=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\n              <div className=\"articles-header-a\">     \n                    Hemant </div></Link>\n          </Toolbar>\n          </div>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar />\n        \n            {loading? <div className=\"loading\">\n      <CircularProgress color=\"secondary\" />\n    </div>:\n            error? <div>{error}</div>:\n            (    \n              \n        <div className='container-sm'>\n                    <div className=\"container-md\">\n                    <img src={articles.cover_image} class=\"img-fluid\" alt=\"Responsive image\"/>\n                    </div>\n                   \n                <div className=\"main\">\n                  <div className=\"article-title\">{articles.title}\n                        </div>\n                   \n                    </div>\n\n                    <div className=\"body\">\n                    <div class=\"markdown-body\">\n\n                    <MarkdownView\n                        markdown={articles.body_markdown}\n                        options={{ tables: true, emoji: true }}\n                     />\n                    </div>\n                    </div>\n\n\n                    \n\n\n              <Helmet >\n        \n        <title>{articles.title}</title>\n        <meta name=\"description\" content={articles.description}/> \n        <meta property=\"og:title\" content={articles.title}/>\n\t    \t<meta property=\"og:url\" content=\"hemant-blogs.netlify.app\"/>\n\t\t    <meta property=\"og:description\" content={articles.description}/>\n\t\t    <meta property=\"og:image\" content={articles.cover_image}/> \n\t\t    <meta property=\"og:type\" content=\"Tech-Blog\"/>\n    \n\n        </Helmet>\n        <div className=\"share\">\n          Share on  <Twitter url={\"hemant-blogs.netlify.app/articles/hemant/\" + articles.slug }  shareText={\"Hii, check this Awesome Blog post by @8bithemant     '\"+ articles.title + \"'         #100daysofocde #DevCommunity\"} /> ?\n        </div>\n                    </div>\n            )}\n\n\n    \n      \n\n\n    </div>)\n}\n\nexport default ArticleScreen;","import React from 'react';\nimport './App.css';\nimport { Link, BrowserRouter, Route } from 'react-router-dom'\n\nimport HomeScreen from './screens/homeScreen'\nimport ArticleScreen from './screens/articleScreen';\n\n\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    \n    <div className=\"grid-container\">\n\n    \n\n\n    <main className=\"main\">\n      <div className=\"content\">\n        <Route path ='/' exact={true} component={HomeScreen}/>\n        <Route path='/articles/hemant/:slug' component={ArticleScreen} />\n      </div>\n    </main>\n\n\n\n\n\n    </div>\n    \n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {articleListReducer, articleDetailsReducer} from './reducers/homeScreenReducer'\n\nconst reducer= combineReducers({\n\n    articleList: articleListReducer,\n    articleDetails: articleDetailsReducer\n})\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducer,  composeEnhancer(applyMiddleware(thunk)) );\n\nexport default store;","import { ARTICLE_LIST_SUCCESS, ARTICLE_LIST_REQUEST, ARTICLE_LIST_FAIL,ARTICLE_DETAILS_REQUEST,ARTICLE_DETAILS_SUCCESS, ARTICLE_DETAILS_FAIL } from '../constants/banner'\n\n\n\nfunction articleListReducer(state={articles:[]}, action){\n\n\n    switch(action.type){\n      case ARTICLE_LIST_REQUEST:\n          return {loading: true}\n      case ARTICLE_LIST_SUCCESS:\n          return {loading: false, articles: action.payload}\n      case ARTICLE_LIST_FAIL:\n          return {loading: false, error:action.payload}\n      default:\n          return state\n    }\n}\n\n\n\nfunction articleDetailsReducer(state={articles:[]}, action){\n\n\n    switch(action.type){\n      case ARTICLE_DETAILS_REQUEST:\n          return {loading: true}\n      case ARTICLE_DETAILS_SUCCESS:\n          return {loading: false, articles: action.payload}\n      case ARTICLE_DETAILS_FAIL:\n          return {loading: false, error:action.payload}\n      default:\n          return state\n    }\n}\n\n\n\n\n\nexport {articleListReducer, articleDetailsReducer}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/heart.3c19ab0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/pharmacy.44745d96.svg\";","module.exports = __webpack_public_path__ + \"static/media/writing.1abcdebd.svg\";"],"sourceRoot":""}